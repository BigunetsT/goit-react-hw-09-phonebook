{"version":3,"sources":["components/Notification/transitions/notification.module.css","components/ContactList/transitions/pop.module.css","components/ContactForm/ContactForm.module.scss","components/Notification/Notification.module.scss","components/Modal/Modal.module.scss","components/Filter/Filter.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactList/ContactList.module.scss","components/ContactForm/ContactForm.jsx","components/Notification/Notification.js","components/AddContact/AddContact.js","components/Modal/Modal.jsx","components/Filter/Filter.jsx","components/UpdateContact/UpdateContact.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.js"],"names":["module","exports","ContactForm","name","number","onSubmit","onChange","textBtn","className","styles","contactForm","title","label","input","type","value","placeholder","pattern","required","addContactBtn","Notification","message","notification","AddContact","dispatch","useDispatch","contacts","useSelector","contactsSelectors","getContacts","useState","state","setState","setMessage","reset","CSSTransition","in","Boolean","timeout","classNames","unmountOnExit","e","preventDefault","map","item","toLowerCase","includes","setTimeout","contactsOperations","addContact","currentTarget","prev","modalRoot","document","querySelector","Modal","onClose","children","useEffect","handleKeyDown","event","code","window","addEventListener","removeEventListener","createPortal","overlay","onClick","target","modal","closeModalBtn","Filter","getFilter","useCallback","changeFilter","filter","UpdateContact","id","newName","setNewName","newNumber","setNewNumber","index","join","updateContact","console","log","ContactItem","showModal","setShowModal","contactItem","contactData","img","enableBackground","height","viewBox","width","xmlns","cx","cy","fill","r","d","phoneNumber","contactOperations","contactBtn","deleteContact","onDelete","svg","ContactList","TransitionGroup","component","contactsList","popTransition","ContactsPage","countVisibleContacts","firstIndex","setFirstIndex","Number","secondIndex","setSecondIndex","contactsCount","getContactsCount","getSortContacts","showPrevBtn","showNextBtn","fetchContacts","Button","variant","slice","scrollTo","top","left","behavior"],"mappings":"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","file":"static/js/contacts-page.51f54ce5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"notification_enter__3JWk3\",\"enterActive\":\"notification_enterActive__2UqyF\",\"exit\":\"notification_exit__1PxC8\",\"exitActive\":\"notification_exitActive__1xcRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__39SwO\",\"enterActive\":\"pop_enterActive__3sHvc\",\"exit\":\"pop_exit__8tF8i\",\"exitActive\":\"pop_exitActive__1RHxi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__W9vpB\",\"title\":\"ContactForm_title__dQQMX\",\"label\":\"ContactForm_label__3gKcl\",\"input\":\"ContactForm_input__2rPSJ\",\"addContactBtn\":\"ContactForm_addContactBtn__3hpDE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2shNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2zypP\",\"modal\":\"Modal_modal__29I8U\",\"closeModalBtn\":\"Modal_closeModalBtn__2QLQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3IL4l\",\"label\":\"Filter_label__1haaR\",\"input\":\"Filter_input__LvKz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneNumber\":\"ContactItem_phoneNumber__3WKXB\",\"contactItem\":\"ContactItem_contactItem__3reYV\",\"img\":\"ContactItem_img__PDCtf\",\"name\":\"ContactItem_name__1qM9m\",\"contactBtn\":\"ContactItem_contactBtn__ogAru\",\"ring\":\"ContactItem_ring__1DN3A\",\"svg\":\"ContactItem_svg__VYDcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__2uvk5\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\n\nconst ContactForm = ({ name, number, onSubmit, onChange, textBtn }) => {\n  return (\n    <form onSubmit={onSubmit} className={styles.contactForm}>\n      <h2 className={styles.title}>Дані контакту: </h2>\n      <label className={styles.label}>\n        Ім'я\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"введіть ім'я\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Номер телефону\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"XXX-XX-XX\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onChange}\n        />\n      </label>\n      <button type=\"submit\" className={styles.addContactBtn}>\n        {textBtn}\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  textBtn: PropTypes.string,\n};\nexport default ContactForm;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.scss';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <div className={styles.notification}>{message}</div>;\r\n    </>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport ContactForm from '../ContactForm';\r\nimport Notification from '../Notification';\r\nimport { contactsOperations } from '../../redux/contacts';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\nimport notification from '../Notification/transitions/notification.module.css';\r\n\r\nexport default function AddContact() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    number: '',\r\n  });\r\n  const { name, number } = state;\r\n  const [message, setMessage] = useState(null);\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setState(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      contacts.map(item => item.name.toLowerCase()).includes(name.toLowerCase())\r\n    ) {\r\n      setMessage(`${name} is already in contacts`);\r\n      setTimeout(() => {\r\n        setMessage(() => null);\r\n      }, 2000);\r\n      return;\r\n    }\r\n    dispatch(contactsOperations.addContact({ name, number }));\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={Boolean(message)}\r\n        timeout={250}\r\n        classNames={notification}\r\n        unmountOnExit\r\n      >\r\n        <Notification message={message} />\r\n      </CSSTransition>\r\n\r\n      <ContactForm\r\n        onSubmit={handleSubmit}\r\n        onChange={handleChange}\r\n        name={name}\r\n        number={number}\r\n        textBtn=\"Додати контакт\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nAddContact.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  message: PropTypes.string,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Modal.module.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ onClose, children }) {\r\n  useEffect(() => {\r\n    const handleKeyDown = event => {\r\n      if (event.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [onClose]);\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <div className={styles.overlay} onClick={handleBackdropClick}>\r\n      <div className={styles.modal}>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.closeModalBtn}\r\n          onClick={() => {\r\n            onClose();\r\n          }}\r\n        >\r\n          X\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\nimport styles from './Filter.module.scss';\n\nexport default function Filter() {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  const onChange = useCallback(\n    e => dispatch(changeFilter(e.target.value)),\n    [dispatch],\n  );\n  return (\n    <div className={styles.filter}>\n      <label className={styles.label}>\n        Пошук контакта за ім'ям\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport ContactForm from '../ContactForm';\r\nimport Notification from '../Notification';\r\nimport { contactsOperations } from '../../redux/contacts';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\nimport notification from '../Notification/transitions/notification.module.css';\r\n\r\nexport default function UpdateContact({ name, number, id }) {\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n  const [newName, setNewName] = useState(name);\r\n  const [newNumber, setNewNumber] = useState(number);\r\n  const [message, setMessage] = useState(null);\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setNewName(value);\r\n        break;\r\n      case 'number':\r\n        setNewNumber(value);\r\n        break;\r\n      default:\r\n        console.log('Error');\r\n    }\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      contacts\r\n        .map(item => item.name.toLowerCase())\r\n        .includes(newName.toLowerCase()) &&\r\n      contacts[\r\n        contacts\r\n          .map((item, index) => (item.name === newName ? index : null))\r\n          .filter(item => item !== null)\r\n          .join('')\r\n      ].number === newNumber\r\n    ) {\r\n      setMessage('This contact is already in list');\r\n      setTimeout(() => {\r\n        setMessage(() => null);\r\n      }, 2000);\r\n      return;\r\n    }\r\n    dispatch(contactsOperations.updateContact({ id, newName, newNumber }));\r\n  };\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={Boolean(message)}\r\n        timeout={250}\r\n        classNames={notification}\r\n        unmountOnExit\r\n      >\r\n        <Notification message={message} />\r\n      </CSSTransition>\r\n\r\n      <ContactForm\r\n        onSubmit={handleSubmit}\r\n        onChange={handleChange}\r\n        name={newName}\r\n        number={newNumber}\r\n        textBtn=\"Зберегти зміни\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nUpdateContact.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  message: PropTypes.string,\r\n  id: PropTypes.string,\r\n};\r\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Modal from '../Modal';\nimport UpdateContact from '../UpdateContact';\nimport { contactsOperations } from '../../redux/contacts';\nimport styles from './ContactItem.module.scss';\n\nexport default function ContactItem({ id, name, number }) {\n  const dispatch = useDispatch();\n  const onDelete = id => dispatch(contactsOperations.deleteContact(id));\n  const [showModal, setShowModal] = useState(false);\n  const openModal = () => {\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <li name={name} number={number} className={styles.contactItem}>\n      <div className={styles.contactData}>\n        <svg\n          className={styles.img}\n          id=\"Capa_1\"\n          enableBackground=\"new 0 0 512 512\"\n          height=\"30\"\n          viewBox=\"0 0 512 512\"\n          width=\"30\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g>\n            <circle cx=\"255.997\" cy=\"255.997\" fill=\"#fd9468\" r=\"255.997\" />\n            <path\n              d=\"m512 255.997c0 141.381-114.622 256.003-256.003 256.003-42.346 0-82.285-10.278-117.471-28.488 30.597 12.922 64.24 20.072 99.549 20.072 141.381 0 255.992-114.621 255.992-256.002 0-99.076-56.277-185.003-138.614-227.555 91.978 38.827 156.547 129.857 156.547 235.97z\"\n              fill=\"#fe7d43\"\n            />\n            <circle cx=\"255.997\" cy=\"255.997\" fill=\"#f9f3f1\" r=\"212.835\" />\n            <path\n              d=\"m468.83 255.997c0 117.543-95.29 212.833-212.833 212.833-32.264 0-62.851-7.181-90.259-20.031 21.225 7.109 43.951 10.957 67.573 10.957 117.553 0 212.843-95.29 212.843-212.833 0-85.279-50.155-158.84-122.585-192.802 84.417 28.242 145.261 107.955 145.261 201.876z\"\n              fill=\"#efe2dd\"\n            />\n            <path\n              d=\"m226.382 144.985c-15.039-23.199-35.383-41.206-63.445-23.299-15.673 10.002-27.089 25.962-33.236 43.509-13.068 37.303-6.857 77.233 10.736 111.934 21.676 42.754 59.049 81.69 101.112 104.661 46.325 25.298 92.168 20.165 131.372-15.177 16.568-14.936 24.524-40.862 4.519-56.948-16.476-13.248-41.545-33.756-63.268-19.57-14.952 9.765-19.618 26.154-39.359 27.515-33.757 2.327-69.626-50.132-74.033-79.392-1.366-9.075 1.105-16.973 6.538-24.209 5.695-7.585 12.534-9.481 19.286-14.745 16.056-12.519 11.979-35.457-.222-54.279z\"\n              fill=\"#fd9468\"\n            />\n            <path\n              d=\"m372.923 366.617c-39.208 35.34-85.053 40.474-131.371 15.175-42.069-22.974-79.436-61.904-101.113-104.662-13.118-25.865-19.908-54.631-17.099-83.057 1.883 19.753 7.953 39.208 17.099 57.233 21.677 42.758 59.044 81.689 101.113 104.662 46.318 25.299 92.162 20.165 131.371-15.175 6.019-5.432 10.895-12.305 13.714-19.63 6.997 15.206-.699 33.715-13.714 45.454z\"\n              fill=\"#fe7d43\"\n            />\n          </g>\n        </svg>\n        <span className={styles.name}>{name} :</span>\n        <span className={styles.phoneNumber}>{number}</span>\n      </div>\n      <div className={styles.contactOperations}>\n        <button\n          type=\"button\"\n          className={styles.contactBtn}\n          onClick={() => onDelete(id)}\n        >\n          Видалити\n          <svg\n            className={styles.svg}\n            id=\"Capa_1\"\n            enableBackground=\"new 0 0 512 512\"\n            height=\"20\"\n            viewBox=\"0 0 512 512\"\n            width=\"20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <g>\n              <path d=\"m256 441.142c8.284 0 15-6.716 15-15v-201.409c0-8.284-6.716-15-15-15s-15 6.716-15 15v201.409c0 8.284 6.716 15 15 15z\" />\n              <path d=\"m173.412 427.552c.78 8.263 8.115 14.303 16.344 13.523 8.248-.779 14.302-8.096 13.523-16.344l-19.018-201.409c-.779-8.247-8.083-14.303-16.344-13.523-8.248.779-14.302 8.096-13.523 16.344z\" />\n              <path d=\"m322.244 441.076c8.238.779 15.564-5.269 16.344-13.523l19.018-201.409c.779-8.248-5.276-15.565-13.523-16.344-8.26-.784-15.565 5.276-16.344 13.523l-19.018 201.409c-.779 8.247 5.276 15.565 13.523 16.344z\" />\n              <path d=\"m57.646 168.875h8.967l43.448 330.083c.982 7.463 7.344 13.042 14.872 13.042h262.135c7.528 0 13.889-5.579 14.872-13.042l43.448-330.083h8.967c8.284 0 15-6.716 15-15v-65.629c0-8.284-6.716-15-15-15h-128.357v-5.911c0-37.128-30.207-67.335-67.335-67.335h-5.325c-37.128 0-67.335 30.207-67.335 67.335v5.911h-128.357c-8.284 0-15 6.716-15 15v65.629c0 8.284 6.715 15 15 15zm316.267 313.125h-235.826l-41.215-313.125h318.257zm-157.911-414.665c0-20.586 16.749-37.335 37.335-37.335h5.325c20.586 0 37.335 16.749 37.335 37.335v5.911h-79.995zm-143.356 35.911h366.709v35.629c-3.207 0-362.709 0-366.709 0z\" />\n            </g>\n          </svg>\n        </button>\n        <button\n          type=\"button\"\n          className={styles.contactBtn}\n          onClick={() => openModal()}\n        >\n          Редагувати\n          <svg\n            className={styles.svg}\n            height=\"20\"\n            viewBox=\"0 -1 381.53417 381\"\n            width=\"20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"m370.589844 230.964844c-5.523438 0-10 4.476562-10 10v88.792968c-.019532 16.558594-13.4375 29.980469-30 30h-280.589844c-16.5625-.019531-29.980469-13.441406-30-30v-260.589843c.019531-16.5625 13.4375-29.980469 30-30h88.789062c5.523438 0 10-4.476563 10-10 0-5.523438-4.476562-10-10-10h-88.789062c-27.601562.03125-49.96875 22.398437-50 50v260.589843c.03125 27.601563 22.398438 49.96875 50 50h280.589844c27.601562-.03125 49.96875-22.398437 50-50v-88.789062c0-5.523438-4.476563-10.003906-10-10.003906zm0 0\" />\n            <path d=\"m156.367188 178.34375 146.011718-146.015625 47.089844 47.089844-146.011719 146.015625zm0 0\" />\n            <path d=\"m132.542969 249.257812 52.039062-14.414062-37.625-37.625zm0 0\" />\n            <path d=\"m362.488281 7.578125c-9.769531-9.746094-25.585937-9.746094-35.355469 0l-10.605468 10.605469 47.089844 47.089844 10.605468-10.605469c9.75-9.769531 9.75-25.585938 0-35.355469zm0 0\" />\n          </svg>\n        </button>\n        {showModal && (\n          <Modal onClose={closeModal}>\n            <UpdateContact name={name} number={number} id={id} />\n          </Modal>\n        )}\n      </div>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n};\n","import { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport popTransition from './transitions/pop.module.css';\nimport ContactItem from '../ContactItem';\nimport styles from './ContactList.module.scss';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition key={id} timeout={200} classNames={popTransition}>\n          <ContactItem id={id} name={name} number={number} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Button } from 'react-bootstrap';\r\nimport AddContact from '../components/AddContact';\r\nimport Modal from '../components/Modal';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\nimport { contactsOperations } from '../redux/contacts';\r\nimport { contactsSelectors } from '../redux/contacts';\r\nimport popTransition from '../components/ContactList/transitions/pop.module.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles.scss';\r\n\r\nexport default function ContactsPage() {\r\n  const dispatch = useDispatch();\r\n  const countVisibleContacts = 26;\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [firstIndex, setFirstIndex] = useState(0);\r\n  const [secondIndex, setSecondIndex] = useState(\r\n    Number(`${countVisibleContacts}`),\r\n  );\r\n\r\n  const contactsCount = useSelector(contactsSelectors.getContactsCount);\r\n  const contacts = useSelector(contactsSelectors.getSortContacts);\r\n  const filter = useSelector(contactsSelectors.getFilter);\r\n  const showPrevBtn = secondIndex > `${countVisibleContacts}`;\r\n  const showNextBtn = contactsCount - secondIndex > 0;\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  const prevContacts = () => {\r\n    setFirstIndex(firstIndex - Number(`${countVisibleContacts}`));\r\n    setSecondIndex(secondIndex - Number(`${countVisibleContacts}`));\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n  const nextContacts = () => {\r\n    setFirstIndex(firstIndex + Number(`${countVisibleContacts}`));\r\n    setSecondIndex(secondIndex + Number(`${countVisibleContacts}`));\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"container__page container__page-contacts\">\r\n      <h1 className=\"title\">Контакти</h1>\r\n      <div className=\"contacts\">\r\n        <div className=\"contacts__operations\">\r\n          <h3 className=\"contacts__count\">\r\n            {contactsCount\r\n              ? `Всього контактів: ${contactsCount}`\r\n              : 'У Вас ще немає контактів'}\r\n          </h3>\r\n          <Button variant=\"secondary\" onClick={openModal} className=\"addBtn\">\r\n            Додати контакт\r\n            <svg\r\n              className=\"contacts__addBtnImg\"\r\n              id=\"_x31__px\"\r\n              enableBackground=\"new 0 0 24 24\"\r\n              height=\"20\"\r\n              viewBox=\"0 0 24 24\"\r\n              width=\"20\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path d=\"m9.02 21h-6.52c-1.378 0-2.5-1.121-2.5-2.5v-16c0-1.379 1.122-2.5 2.5-2.5h12c1.378 0 2.5 1.121 2.5 2.5v6.06c0 .276-.224.5-.5.5s-.5-.224-.5-.5v-6.06c0-.827-.673-1.5-1.5-1.5h-12c-.827 0-1.5.673-1.5 1.5v16c0 .827.673 1.5 1.5 1.5h6.52c.276 0 .5.224.5.5s-.224.5-.5.5z\" />\r\n              <path d=\"m13.5 9h-10c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h10c.276 0 .5.224.5.5s-.224.5-.5.5z\" />\r\n              <path d=\"m9.5 13h-6c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h6c.276 0 .5.224.5.5s-.224.5-.5.5z\" />\r\n              <path d=\"m8.5 5h-5c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h5c.276 0 .5.224.5.5s-.224.5-.5.5z\" />\r\n              <path d=\"m17.5 24c-3.584 0-6.5-2.916-6.5-6.5s2.916-6.5 6.5-6.5 6.5 2.916 6.5 6.5-2.916 6.5-6.5 6.5zm0-12c-3.033 0-5.5 2.468-5.5 5.5s2.467 5.5 5.5 5.5 5.5-2.468 5.5-5.5-2.467-5.5-5.5-5.5z\" />\r\n              <path d=\"m17.5 21c-.276 0-.5-.224-.5-.5v-6c0-.276.224-.5.5-.5s.5.224.5.5v6c0 .276-.224.5-.5.5z\" />\r\n              <path d=\"m20.5 18h-6c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h6c.276 0 .5.224.5.5s-.224.5-.5.5z\" />\r\n            </svg>\r\n          </Button>\r\n\r\n          {showModal && (\r\n            <Modal onClose={closeModal}>\r\n              <AddContact />\r\n            </Modal>\r\n          )}\r\n          <CSSTransition\r\n            in={Number(contactsCount) > 1}\r\n            timeout={250}\r\n            classNames={popTransition}\r\n            unmountOnExit\r\n          >\r\n            <Filter />\r\n          </CSSTransition>\r\n        </div>\r\n        <div className=\"contacts__info\">\r\n          {filter && (\r\n            <ContactList\r\n              contacts={contacts.slice(0, Number(`${countVisibleContacts}`))}\r\n              className=\"contact__list\"\r\n            />\r\n          )}\r\n          <ContactList\r\n            contacts={contacts.slice(firstIndex, secondIndex)}\r\n            className=\"contact__list\"\r\n          />\r\n          <div className=\"pagination\">\r\n            {showPrevBtn && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"pagination-btn\"\r\n                onClick={prevContacts}\r\n              >\r\n                Попередня сторінка\r\n              </button>\r\n            )}\r\n            {showNextBtn && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"pagination-btn\"\r\n                onClick={nextContacts}\r\n              >\r\n                Наступна сторінка\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer\">GoIt-2021 React#27</div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}