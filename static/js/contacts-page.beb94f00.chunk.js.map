{"version":3,"sources":["components/Notification/transitions/notification.module.css","components/ContactList/transitions/pop.module.css","components/ContactForm/ContactForm.module.scss","components/Notification/Notification.module.scss","components/Modal/Modal.module.scss","components/Filter/Filter.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactList/ContactList.module.scss","components/ContactForm/ContactForm.jsx","components/Notification/Notification.js","components/AddContact/AddContact.js","components/Modal/Modal.jsx","components/Filter/Filter.jsx","components/UpdateContact/UpdateContact.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.js"],"names":["module","exports","ContactForm","name","number","onSubmit","onChange","textBtn","className","styles","contactForm","title","label","input","type","value","placeholder","pattern","required","addContactBtn","Notification","message","notification","INITIAL_STATE","AddContact","state","handleChange","e","currentTarget","setState","prev","handleSubmit","preventDefault","props","contacts","map","item","toLowerCase","includes","setTimeout","reset","this","CSSTransition","in","Boolean","timeout","classNames","unmountOnExit","Component","connect","contactsSelectors","getContacts","dispatch","contactsOperations","addContact","modalRoot","document","querySelector","Modal","handleKeyDown","event","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","children","createPortal","overlay","onClick","modal","closeModalBtn","getFilter","changeFilter","filter","UpdateContact","id","index","join","updateContact","ContactItem","showModal","openModal","closeModal","onDelete","contactItem","contactData","img","enableBackground","height","viewBox","width","xmlns","cx","cy","fill","r","d","phoneNumber","contactOperations","contactBtn","svg","deleteContact","ContactList","TransitionGroup","component","contactsList","popTransition","countVisibleContacts","ContactsPage","firstIndex","secondIndex","Number","prevContacts","prevState","scrollTo","top","left","behavior","nextContacts","fetchContacts","contactsCount","showPrevBtn","showNextBtn","Button","variant","slice","getContactsCount","getSortContacts"],"mappings":"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","file":"static/js/contacts-page.beb94f00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"notification_enter__3JWk3\",\"enterActive\":\"notification_enterActive__2UqyF\",\"exit\":\"notification_exit__1PxC8\",\"exitActive\":\"notification_exitActive__1xcRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__39SwO\",\"enterActive\":\"pop_enterActive__3sHvc\",\"exit\":\"pop_exit__8tF8i\",\"exitActive\":\"pop_exitActive__1RHxi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__W9vpB\",\"title\":\"ContactForm_title__dQQMX\",\"label\":\"ContactForm_label__3gKcl\",\"input\":\"ContactForm_input__2rPSJ\",\"addContactBtn\":\"ContactForm_addContactBtn__3hpDE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2shNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2zypP\",\"modal\":\"Modal_modal__29I8U\",\"closeModalBtn\":\"Modal_closeModalBtn__2QLQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3IL4l\",\"label\":\"Filter_label__1haaR\",\"input\":\"Filter_input__LvKz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneNumber\":\"ContactItem_phoneNumber__3WKXB\",\"contactItem\":\"ContactItem_contactItem__3reYV\",\"img\":\"ContactItem_img__PDCtf\",\"name\":\"ContactItem_name__1qM9m\",\"contactBtn\":\"ContactItem_contactBtn__ogAru\",\"ring\":\"ContactItem_ring__1DN3A\",\"svg\":\"ContactItem_svg__VYDcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__2uvk5\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\n\nconst ContactForm = ({ name, number, onSubmit, onChange, textBtn }) => {\n  return (\n    <form onSubmit={onSubmit} className={styles.contactForm}>\n      <h2 className={styles.title}>Дані контакту: </h2>\n      <label className={styles.label}>\n        Ім'я\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"введіть ім'я\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Номер телефону\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"XXX-XX-XX\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onChange}\n        />\n      </label>\n      <button type=\"submit\" className={styles.addContactBtn}>\n        {textBtn}\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  textBtn: PropTypes.string,\n};\nexport default ContactForm;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.scss';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <div className={styles.notification}>{message}</div>;\r\n    </>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport ContactForm from '../ContactForm';\r\nimport Notification from '../Notification';\r\nimport { contactsOperations } from '../../redux/contacts';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\nimport notification from '../Notification/transitions/notification.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n  message: null,\r\n};\r\nclass AddContact extends Component {\r\n  static propTypes = {\r\n    INITIAL_STATE: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      message: PropTypes.string,\r\n    }),\r\n    onSubmit: PropTypes.func,\r\n  };\r\n  state = { ...INITIAL_STATE };\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  handleSubmit = e => {\r\n    const { name } = this.state;\r\n    e.preventDefault();\r\n    if (\r\n      this.props.contacts\r\n        .map(item => item.name.toLowerCase())\r\n        .includes(name.toLowerCase())\r\n    ) {\r\n      this.setState({\r\n        message: `${name} is already in contacts`,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState(() => ({ message: null }));\r\n      }, 2000);\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n  render() {\r\n    const { name, number, message } = this.state;\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={Boolean(message)}\r\n          timeout={250}\r\n          classNames={notification}\r\n          unmountOnExit\r\n        >\r\n          <Notification message={message} />\r\n        </CSSTransition>\r\n\r\n        <ContactForm\r\n          onSubmit={this.handleSubmit}\r\n          onChange={this.handleChange}\r\n          name={name}\r\n          number={number}\r\n          textBtn=\"Додати контакт\"\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToPrope = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({ name, number }) =>\r\n    dispatch(contactsOperations.addContact({ name, number })),\r\n});\r\n\r\nexport default connect(mapStateToPrope, mapDispatchToProps)(AddContact);\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Modal.module.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func,\r\n    children: PropTypes.node,\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    const { children } = this.props;\r\n    return createPortal(\r\n      <div className={styles.overlay} onClick={this.handleBackdropClick}>\r\n        <div className={styles.modal}>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.closeModalBtn}\r\n            onClick={() => {\r\n              this.props.onClose();\r\n            }}\r\n          >\r\n            X\r\n          </button>\r\n          {children}\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\nimport styles from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.filter}>\n      <label className={styles.label}>\n        Пошук контакта за ім'ям\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport ContactForm from '../ContactForm';\r\nimport Notification from '../Notification';\r\nimport { contactsOperations } from '../../redux/contacts';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\nimport notification from '../Notification/transitions/notification.module.css';\r\n\r\nclass UpdateContact extends Component {\r\n  static propTypes = {\r\n    INITIAL_STATE: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      message: PropTypes.string,\r\n    }),\r\n    onSubmit: PropTypes.func,\r\n  };\r\n  state = {\r\n    name: this.props.name,\r\n    number: this.props.number,\r\n    id: this.props.id,\r\n    message: null,\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n    e.preventDefault();\r\n    if (\r\n      contacts\r\n        .map(item => item.name.toLowerCase())\r\n        .includes(name.toLowerCase()) &&\r\n      contacts[\r\n        contacts\r\n          .map((item, index) => (item.name === name ? index : null))\r\n          .filter(item => item !== null)\r\n          .join('')\r\n      ].number === number\r\n    ) {\r\n      this.setState({\r\n        message: 'This contact is already in list',\r\n      });\r\n      setTimeout(() => {\r\n        this.setState(() => ({ message: null }));\r\n      }, 2000);\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { name, number, message } = this.state;\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={Boolean(message)}\r\n          timeout={250}\r\n          classNames={notification}\r\n          unmountOnExit\r\n        >\r\n          <Notification message={message} />\r\n        </CSSTransition>\r\n\r\n        <ContactForm\r\n          onSubmit={this.handleSubmit}\r\n          onChange={this.handleChange}\r\n          name={name}\r\n          number={number}\r\n          textBtn=\"Зберегти зміни\"\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToPrope = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({ id, name, number }) =>\r\n    dispatch(contactsOperations.updateContact({ id, name, number })),\r\n});\r\n\r\nexport default connect(mapStateToPrope, mapDispatchToProps)(UpdateContact);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Modal from '../Modal';\nimport UpdateContact from '../UpdateContact';\nimport { contactsOperations } from '../../redux/contacts';\nimport styles from './ContactItem.module.scss';\n\nclass ContactItem extends Component {\n  state = {\n    showModal: false,\n  };\n  openModal = () => {\n    this.setState({ showModal: true });\n  };\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  render() {\n    const { id, name, number, onDelete } = this.props;\n    const { showModal } = this.state;\n    return (\n      <li name={name} number={number} className={styles.contactItem}>\n        <div className={styles.contactData}>\n          <svg\n            className={styles.img}\n            id=\"Capa_1\"\n            enableBackground=\"new 0 0 512 512\"\n            height=\"30\"\n            viewBox=\"0 0 512 512\"\n            width=\"30\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <g>\n              <circle cx=\"255.997\" cy=\"255.997\" fill=\"#fd9468\" r=\"255.997\" />\n              <path\n                d=\"m512 255.997c0 141.381-114.622 256.003-256.003 256.003-42.346 0-82.285-10.278-117.471-28.488 30.597 12.922 64.24 20.072 99.549 20.072 141.381 0 255.992-114.621 255.992-256.002 0-99.076-56.277-185.003-138.614-227.555 91.978 38.827 156.547 129.857 156.547 235.97z\"\n                fill=\"#fe7d43\"\n              />\n              <circle cx=\"255.997\" cy=\"255.997\" fill=\"#f9f3f1\" r=\"212.835\" />\n              <path\n                d=\"m468.83 255.997c0 117.543-95.29 212.833-212.833 212.833-32.264 0-62.851-7.181-90.259-20.031 21.225 7.109 43.951 10.957 67.573 10.957 117.553 0 212.843-95.29 212.843-212.833 0-85.279-50.155-158.84-122.585-192.802 84.417 28.242 145.261 107.955 145.261 201.876z\"\n                fill=\"#efe2dd\"\n              />\n              <path\n                d=\"m226.382 144.985c-15.039-23.199-35.383-41.206-63.445-23.299-15.673 10.002-27.089 25.962-33.236 43.509-13.068 37.303-6.857 77.233 10.736 111.934 21.676 42.754 59.049 81.69 101.112 104.661 46.325 25.298 92.168 20.165 131.372-15.177 16.568-14.936 24.524-40.862 4.519-56.948-16.476-13.248-41.545-33.756-63.268-19.57-14.952 9.765-19.618 26.154-39.359 27.515-33.757 2.327-69.626-50.132-74.033-79.392-1.366-9.075 1.105-16.973 6.538-24.209 5.695-7.585 12.534-9.481 19.286-14.745 16.056-12.519 11.979-35.457-.222-54.279z\"\n                fill=\"#fd9468\"\n              />\n              <path\n                d=\"m372.923 366.617c-39.208 35.34-85.053 40.474-131.371 15.175-42.069-22.974-79.436-61.904-101.113-104.662-13.118-25.865-19.908-54.631-17.099-83.057 1.883 19.753 7.953 39.208 17.099 57.233 21.677 42.758 59.044 81.689 101.113 104.662 46.318 25.299 92.162 20.165 131.371-15.175 6.019-5.432 10.895-12.305 13.714-19.63 6.997 15.206-.699 33.715-13.714 45.454z\"\n                fill=\"#fe7d43\"\n              />\n            </g>\n          </svg>\n          <span className={styles.name}>{name} :</span>\n          <span className={styles.phoneNumber}>{number}</span>\n        </div>\n        <div className={styles.contactOperations}>\n          <button\n            type=\"button\"\n            className={styles.contactBtn}\n            onClick={() => onDelete(id)}\n          >\n            Видалити\n            <svg\n              className={styles.svg}\n              id=\"Capa_1\"\n              enableBackground=\"new 0 0 512 512\"\n              height=\"20\"\n              viewBox=\"0 0 512 512\"\n              width=\"20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <g>\n                <path d=\"m256 441.142c8.284 0 15-6.716 15-15v-201.409c0-8.284-6.716-15-15-15s-15 6.716-15 15v201.409c0 8.284 6.716 15 15 15z\" />\n                <path d=\"m173.412 427.552c.78 8.263 8.115 14.303 16.344 13.523 8.248-.779 14.302-8.096 13.523-16.344l-19.018-201.409c-.779-8.247-8.083-14.303-16.344-13.523-8.248.779-14.302 8.096-13.523 16.344z\" />\n                <path d=\"m322.244 441.076c8.238.779 15.564-5.269 16.344-13.523l19.018-201.409c.779-8.248-5.276-15.565-13.523-16.344-8.26-.784-15.565 5.276-16.344 13.523l-19.018 201.409c-.779 8.247 5.276 15.565 13.523 16.344z\" />\n                <path d=\"m57.646 168.875h8.967l43.448 330.083c.982 7.463 7.344 13.042 14.872 13.042h262.135c7.528 0 13.889-5.579 14.872-13.042l43.448-330.083h8.967c8.284 0 15-6.716 15-15v-65.629c0-8.284-6.716-15-15-15h-128.357v-5.911c0-37.128-30.207-67.335-67.335-67.335h-5.325c-37.128 0-67.335 30.207-67.335 67.335v5.911h-128.357c-8.284 0-15 6.716-15 15v65.629c0 8.284 6.715 15 15 15zm316.267 313.125h-235.826l-41.215-313.125h318.257zm-157.911-414.665c0-20.586 16.749-37.335 37.335-37.335h5.325c20.586 0 37.335 16.749 37.335 37.335v5.911h-79.995zm-143.356 35.911h366.709v35.629c-3.207 0-362.709 0-366.709 0z\" />\n              </g>\n            </svg>\n          </button>\n          <button\n            type=\"button\"\n            className={styles.contactBtn}\n            onClick={() => this.openModal()}\n          >\n            Редагувати\n            <svg\n              className={styles.svg}\n              height=\"20\"\n              viewBox=\"0 -1 381.53417 381\"\n              width=\"20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"m370.589844 230.964844c-5.523438 0-10 4.476562-10 10v88.792968c-.019532 16.558594-13.4375 29.980469-30 30h-280.589844c-16.5625-.019531-29.980469-13.441406-30-30v-260.589843c.019531-16.5625 13.4375-29.980469 30-30h88.789062c5.523438 0 10-4.476563 10-10 0-5.523438-4.476562-10-10-10h-88.789062c-27.601562.03125-49.96875 22.398437-50 50v260.589843c.03125 27.601563 22.398438 49.96875 50 50h280.589844c27.601562-.03125 49.96875-22.398437 50-50v-88.789062c0-5.523438-4.476563-10.003906-10-10.003906zm0 0\" />\n              <path d=\"m156.367188 178.34375 146.011718-146.015625 47.089844 47.089844-146.011719 146.015625zm0 0\" />\n              <path d=\"m132.542969 249.257812 52.039062-14.414062-37.625-37.625zm0 0\" />\n              <path d=\"m362.488281 7.578125c-9.769531-9.746094-25.585937-9.746094-35.355469 0l-10.605468 10.605469 47.089844 47.089844 10.605468-10.605469c9.75-9.769531 9.75-25.585938 0-35.355469zm0 0\" />\n            </svg>\n          </button>\n          {showModal && (\n            <Modal onClose={this.closeModal}>\n              <UpdateContact name={name} number={number} id={id} />\n            </Modal>\n          )}\n        </div>\n      </li>\n    );\n  }\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n  onUpdate: PropTypes.func,\n};\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\n});\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","import { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport popTransition from './transitions/pop.module.css';\nimport ContactItem from '../ContactItem';\nimport styles from './ContactList.module.scss';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition key={id} timeout={200} classNames={popTransition}>\n          <ContactItem id={id} name={name} number={number} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func,\n};\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Button } from 'react-bootstrap';\r\nimport AddContact from '../components/AddContact';\r\nimport Modal from '../components/Modal';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\nimport { contactsOperations } from '../redux/contacts';\r\nimport { contactsSelectors } from '../redux/contacts';\r\nimport popTransition from '../components/ContactList/transitions/pop.module.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles.scss';\r\n\r\nconst countVisibleContacts = 26;\r\n\r\nclass ContactsPage extends Component {\r\n  state = {\r\n    showModal: false,\r\n    firstIndex: 0,\r\n    secondIndex: Number(`${countVisibleContacts}`),\r\n  };\r\n  openModal = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      showModal: true,\r\n    });\r\n  };\r\n  closeModal = () => {\r\n    this.setState({ ...this.state, showModal: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  prevContacts = () => {\r\n    this.setState(prevState => ({\r\n      ...this.state,\r\n      firstIndex: prevState.firstIndex - Number(`${countVisibleContacts}`),\r\n      secondIndex: prevState.secondIndex - Number(`${countVisibleContacts}`),\r\n    }));\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n  nextContacts = () => {\r\n    this.setState(prevState => ({\r\n      ...this.state,\r\n      firstIndex: prevState.firstIndex + Number(`${countVisibleContacts}`),\r\n      secondIndex: prevState.secondIndex + Number(`${countVisibleContacts}`),\r\n    }));\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n  render() {\r\n    const { contactsCount, contacts, filter } = this.props;\r\n    const { showModal, firstIndex, secondIndex } = this.state;\r\n    const showPrevBtn = secondIndex > `${countVisibleContacts}`;\r\n    const showNextBtn = contactsCount - secondIndex > 0;\r\n    return (\r\n      <div className=\"container__page container__page-contacts\">\r\n        <h1 className=\"title\">Контакти</h1>\r\n        <div className=\"contacts\">\r\n          <div className=\"contacts__operations\">\r\n            <h3 className=\"contacts__count\">\r\n              {contactsCount\r\n                ? `Всього контактів: ${contactsCount}`\r\n                : 'У Вас ще немає контактів'}\r\n            </h3>\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={this.openModal}\r\n              className=\"addBtn\"\r\n            >\r\n              Додати контакт\r\n              <svg\r\n                className=\"contacts__addBtnImg\"\r\n                id=\"_x31__px\"\r\n                enableBackground=\"new 0 0 24 24\"\r\n                height=\"20\"\r\n                viewBox=\"0 0 24 24\"\r\n                width=\"20\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path d=\"m9.02 21h-6.52c-1.378 0-2.5-1.121-2.5-2.5v-16c0-1.379 1.122-2.5 2.5-2.5h12c1.378 0 2.5 1.121 2.5 2.5v6.06c0 .276-.224.5-.5.5s-.5-.224-.5-.5v-6.06c0-.827-.673-1.5-1.5-1.5h-12c-.827 0-1.5.673-1.5 1.5v16c0 .827.673 1.5 1.5 1.5h6.52c.276 0 .5.224.5.5s-.224.5-.5.5z\" />\r\n                <path d=\"m13.5 9h-10c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h10c.276 0 .5.224.5.5s-.224.5-.5.5z\" />\r\n                <path d=\"m9.5 13h-6c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h6c.276 0 .5.224.5.5s-.224.5-.5.5z\" />\r\n                <path d=\"m8.5 5h-5c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h5c.276 0 .5.224.5.5s-.224.5-.5.5z\" />\r\n                <path d=\"m17.5 24c-3.584 0-6.5-2.916-6.5-6.5s2.916-6.5 6.5-6.5 6.5 2.916 6.5 6.5-2.916 6.5-6.5 6.5zm0-12c-3.033 0-5.5 2.468-5.5 5.5s2.467 5.5 5.5 5.5 5.5-2.468 5.5-5.5-2.467-5.5-5.5-5.5z\" />\r\n                <path d=\"m17.5 21c-.276 0-.5-.224-.5-.5v-6c0-.276.224-.5.5-.5s.5.224.5.5v6c0 .276-.224.5-.5.5z\" />\r\n                <path d=\"m20.5 18h-6c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h6c.276 0 .5.224.5.5s-.224.5-.5.5z\" />\r\n              </svg>\r\n            </Button>\r\n\r\n            {showModal && (\r\n              <Modal onClose={this.closeModal}>\r\n                <AddContact />\r\n              </Modal>\r\n            )}\r\n            <CSSTransition\r\n              in={Number(contactsCount) > 1}\r\n              timeout={250}\r\n              classNames={popTransition}\r\n              unmountOnExit\r\n            >\r\n              <Filter />\r\n            </CSSTransition>\r\n          </div>\r\n          <div className=\"contacts__info\">\r\n            {filter && (\r\n              <ContactList\r\n                contacts={contacts.slice(0, Number(`${countVisibleContacts}`))}\r\n                className=\"contact__list\"\r\n              />\r\n            )}\r\n            <ContactList\r\n              contacts={contacts.slice(firstIndex, secondIndex)}\r\n              className=\"contact__list\"\r\n            />\r\n            <div className=\"pagination\">\r\n              {showPrevBtn && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"pagination-btn\"\r\n                  onClick={this.prevContacts}\r\n                >\r\n                  Попередня сторінка\r\n                </button>\r\n              )}\r\n              {showNextBtn && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"pagination-btn\"\r\n                  onClick={this.nextContacts}\r\n                >\r\n                  Наступна сторінка\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">GoIt-2021 React#27</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  contactsCount: contactsSelectors.getContactsCount(state),\r\n  contacts: contactsSelectors.getSortContacts(state),\r\n  filter: contactsSelectors.getFilter(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\r\n"],"sourceRoot":""}