{"version":3,"sources":["pages/LoginPage.js"],"names":["LoginPage","useState","email","password","formData","setFormData","showPassword","setShowPassword","handleChange","name","event","target","value","dispatch","useDispatch","className","onSubmit","e","preventDefault","authOperations","logIn","autoComplete","id","label","variant","onChange","htmlFor","type","endAdornment","position","aria-label","onClick","onMouseDown","edge","labelWidth"],"mappings":"yVAgBe,SAASA,IACtB,MAAgCC,mBAAS,CACvCC,MAAO,GACPC,SAAU,KAFZ,mBAAOC,EAAP,KAAiBC,EAAjB,KAIA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAOMC,EAAe,SAAAC,GAAI,OAAI,SAAAC,GAC3BL,EAAY,2BACPD,GADM,kBAERK,EAAOC,EAAMC,OAAOC,WAGnBC,EAAWC,cAUjB,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6FACA,uBAAMC,SAZW,SAAAC,GACnBA,EAAEC,iBACFL,EAASM,IAAeC,MAAMhB,IAC9BC,EAAY,CACVH,MAAO,GACPC,SAAU,MAOoBY,UAAU,OAAOM,aAAa,KAA5D,UACE,cAAC,IAAD,CACEC,GAAG,iBACHC,MAAM,iCACNC,QAAQ,WACRf,KAAK,QACLgB,SAAUjB,EAAa,WAEzB,eAAC,IAAD,CAAagB,QAAQ,WAArB,UACE,cAAC,IAAD,CAAYE,QAAQ,8BAApB,kDACA,cAAC,IAAD,CACEJ,GAAG,8BACHK,KAAMrB,EAAe,OAAS,WAC9BG,KAAK,WACLgB,SAAUjB,EAAa,YACvBoB,aACE,cAAC,IAAD,CAAgBC,SAAS,MAAzB,SACE,cAAC,IAAD,CACEC,aAAW,6BACXC,QA5CgB,WAC9BxB,GAAiBD,IA4CH0B,YA1CgB,SAAAtB,GAC9BA,EAAMQ,kBA0CQe,KAAK,MAJP,SAMG3B,EAAe,cAAC,IAAD,IAAiB,cAAC,IAAD,QAIvC4B,WAAY,QAIhB,wBAAQP,KAAK,SAASZ,UAAU,UAAhC","file":"static/js/login-page.d5a62b7a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { authOperations } from '../redux/auth';\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport '../styles.scss';\r\n\r\nexport default function LoginPage() {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n  const handleChange = name => event => {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn(formData));\r\n    setFormData({\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h1 className=\"title\">Сторінка входу</h1>\r\n      <form onSubmit={handleSubmit} className=\"form\" autoComplete=\"on\">\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Пошта\"\r\n          variant=\"outlined\"\r\n          name=\"email\"\r\n          onChange={handleChange('email')}\r\n        />\r\n        <FormControl variant=\"outlined\">\r\n          <InputLabel htmlFor=\"outlined-adornment-password\">Пароль</InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-password\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            name=\"password\"\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge=\"end\"\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            labelWidth={70}\r\n          />\r\n        </FormControl>\r\n\r\n        <button type=\"submit\" className=\"formBtn\">\r\n          Ввійти\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nLoginPage.propTypes = {\r\n  email: PropTypes.string,\r\n  password: PropTypes.string,\r\n  showPassword: PropTypes.bool,\r\n};\r\n"],"sourceRoot":""}