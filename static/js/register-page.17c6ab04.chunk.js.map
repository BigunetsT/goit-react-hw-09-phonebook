{"version":3,"sources":["pages/RegisterPage.js"],"names":["RegisterPage","state","name","email","password","showPassword","handleClickShowPassword","setState","handleMouseDownPassword","event","preventDefault","handleChange","prop","target","value","handleSubmit","e","props","onRegister","this","className","onSubmit","autoComplete","id","label","variant","onChange","htmlFor","type","endAdornment","position","aria-label","onClick","onMouseDown","edge","labelWidth","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"yUAgBMA,E,4MASJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAYZH,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,cAAc,G,EAEhBC,wBAA0B,WACxB,EAAKC,SAAL,2BAAmB,EAAKN,OAAxB,IAA+BI,cAAe,EAAKJ,MAAMI,iB,EAG3DG,wBAA0B,SAAAC,GACxBA,EAAMC,kB,EAGRC,aAAe,SAAAC,GAAI,OAAI,SAAAH,GACrB,EAAKF,SAAL,2BAAmB,EAAKN,OAAxB,kBAAgCW,EAAOH,EAAMI,OAAOC,W,EAGtDC,aAAe,SAAAC,GACbA,EAAEN,iBACF,EAAKO,MAAMC,WAAW,EAAKjB,OAC3B,EAAKM,SAAS,CAAEL,KAAM,GAAIC,MAAO,GAAIC,SAAU,GAAIC,cAAc,K,4CAGnE,WACE,MAAgDc,KAAKlB,MAA7CC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,aAE/B,OACE,sBAAKe,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,2HACA,uBAAMC,SAAUF,KAAKJ,aAAcK,UAAU,OAAOE,aAAa,KAAjE,UACE,cAAC,IAAD,CACEC,GAAG,iBACHC,MAAM,sBACNC,QAAQ,WACRX,MAAOZ,EACPA,KAAK,OACLwB,SAAUP,KAAKR,aAAa,UAE9B,cAAC,IAAD,CACEY,GAAG,iBACHC,MAAM,iCACNC,QAAQ,WACRX,MAAOX,EACPD,KAAK,QACLwB,SAAUP,KAAKR,aAAa,WAE9B,eAAC,IAAD,CAAac,QAAQ,WAArB,UACE,cAAC,IAAD,CAAYE,QAAQ,8BAApB,kDAGA,cAAC,IAAD,CACEJ,GAAG,8BACHK,KAAMvB,EAAe,OAAS,WAC9BS,MAAOV,EACPF,KAAK,WACLwB,SAAUP,KAAKR,aAAa,YAC5BkB,aACE,cAAC,IAAD,CAAgBC,SAAS,MAAzB,SACE,cAAC,IAAD,CACEC,aAAW,6BACXC,QAASb,KAAKb,wBACd2B,YAAad,KAAKX,wBAClB0B,KAAK,MAJP,SAMG7B,EAAe,cAAC,IAAD,IAAiB,cAAC,IAAD,QAIvC8B,WAAY,QAIhB,wBAAQP,KAAK,SAASR,UAAU,UAAhC,kH,GAjGiBgB,aAyGrBC,EAAqB,CACzBnB,WAAYoB,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkCxC","file":"static/js/register-page.17c6ab04.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\nimport '../styles.scss';\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nclass RegisterPage extends Component {\r\n  static propTypes = {\r\n    state: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      email: PropTypes.string.isRequired,\r\n      password: PropTypes.string.isRequired,\r\n    }),\r\n    onSubmit: PropTypes.func,\r\n  };\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    state: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      email: PropTypes.string.isRequired,\r\n      password: PropTypes.string.isRequired,\r\n      showPassword: PropTypes.bool,\r\n    }),\r\n    onSubmit: PropTypes.func,\r\n  };\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    showPassword: false,\r\n  };\r\n  handleClickShowPassword = () => {\r\n    this.setState({ ...this.state, showPassword: !this.state.showPassword });\r\n  };\r\n\r\n  handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  handleChange = prop => event => {\r\n    this.setState({ ...this.state, [prop]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onRegister(this.state);\r\n    this.setState({ name: '', email: '', password: '', showPassword: false });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password, showPassword } = this.state;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1 className=\"title\">Сторінка реєстрації</h1>\r\n        <form onSubmit={this.handleSubmit} className=\"form\" autoComplete=\"on\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Ім'я\"\r\n            variant=\"outlined\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleChange('name')}\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Пошта\"\r\n            variant=\"outlined\"\r\n            value={email}\r\n            name=\"email\"\r\n            onChange={this.handleChange('email')}\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Пароль\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={password}\r\n              name=\"password\"\r\n              onChange={this.handleChange('password')}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={this.handleClickShowPassword}\r\n                    onMouseDown={this.handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={70}\r\n            />\r\n          </FormControl>\r\n\r\n          <button type=\"submit\" className=\"formBtn\">\r\n            Зареєструватися\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterPage);\r\n"],"sourceRoot":""}